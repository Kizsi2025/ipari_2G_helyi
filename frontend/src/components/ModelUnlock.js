// ModelUnlock.js - Modell felold√°s komponens
import React, { useState } from 'react';
import { motion } from 'framer-motion';

const ModelUnlock = ({ gameState, unlockModel }) => {
  const [selectedModel, setSelectedModel] = useState(null);
  const [showDetails, setShowDetails] = useState(false);

  const models = [
    {
      id: 'classification',
      name: 'Klasszifik√°ci√≥s Modell',
      cost: 15,
      icon: 'üéØ',
      description: 'A "S√≥lyomszem" - Automatikus selejt-felismer≈ë rendszer',
      features: [
        'Val√≥s idej≈± term√©k kategoriz√°l√°s',
        'Megfelel≈ë/Selejt besorol√°s',
        'Szenzoradatok elemz√©se',
        'Automatikus sz√©tv√°logat√°s'
      ],
      applicationArea: 'Min≈ës√©gbiztos√≠t√°s √©s hibakezel√©s',
      example: 'Kamera alap√∫ vizsg√°lat: egy term√©k lefot√≥z√°sa ut√°n azonnal meg√°llap√≠tja, hogy megfelel≈ë-e vagy selejtes.',
      unlocked: gameState.unlockedModels.includes('classification')
    },
    {
      id: 'regression',
      name: 'Regresszi√≥s Modell', 
      cost: 15,
      icon: 'üìà',
      description: 'A "Krist√°lyg√∂mb" - Numerikus el≈ërejelz≈ë rendszer',
      features: [
        'Termel√©si mennyis√©g becsl√©se',
        'Energiafogyaszt√°s el≈ërejelz√©s',
        'Alkatr√©sz √©lettartam sz√°m√≠t√°s',
        'Kapacit√°stervez√©s t√°mogat√°s'
      ],
      applicationArea: 'Termel√©sir√°ny√≠t√°s √©s optimaliz√°l√°s',
      example: 'Historikus adatok alapj√°n pontosan megj√≥solja, hogy a j√∂v≈ë h√©ten h√°ny darab term√©ket fog gy√°rtani a gy√°r.',
      unlocked: gameState.unlockedModels.includes('regression'),
      prerequisite: 'classification'
    }
  ];

  const handleUnlock = (modelId, cost) => {
    const success = unlockModel(modelId, cost);
    if (success) {
      setSelectedModel(null);
      setShowDetails(false);
    } else {
      alert('Nincs elegend≈ë Tanul√°si Kredited a modell felold√°s√°hoz!');
    }
  };

  const ModelCard = ({ model }) => (
    <motion.div
      className={`model-card \${model.unlocked ? 'unlocked' : 'locked'}`}
      whileHover={{ scale: 1.02 }}
      whileTap={{ scale: 0.98 }}
    >
      <div className="model-header">
        <div className="model-icon">{model.icon}</div>
        <div className="model-info">
          <h3>{model.name}</h3>
          <p className="model-subtitle">{model.description}</p>
        </div>
        <div className="model-cost">
          {model.unlocked ? (
            <span className="unlocked-badge">‚úÖ Feloldva</span>
          ) : (
            <span className="cost-badge">ü™ô {model.cost} TK</span>
          )}
        </div>
      </div>

      <div className="model-features">
        <h4>üîß K√©pess√©gek:</h4>
        <ul>
          {model.features.map((feature, index) => (
            <li key={index}>{feature}</li>
          ))}
        </ul>
      </div>

      <div className="model-application">
        <h4>üè≠ Alkalmaz√°si ter√ºlet:</h4>
        <p>{model.applicationArea}</p>
      </div>

      <div className="model-example">
        <h4>üí° P√©lda haszn√°lat:</h4>
        <p className="example-text">{model.example}</p>
      </div>

      <div className="model-actions">
        {!model.unlocked && (
          <>
            {model.prerequisite && !gameState.unlockedModels.includes(model.prerequisite) ? (
              <button className="btn-disabled" disabled>
                üîí El≈ëbb a {models.find(m => m.id === model.prerequisite)?.name} sz√ºks√©ges
              </button>
            ) : gameState.credits < model.cost ? (
              <button className="btn-disabled" disabled>
                ‚ùå Nincs elegend≈ë kredit ({gameState.credits}/{model.cost} TK)
              </button>
            ) : (
              <button 
                className="btn-unlock"
                onClick={() => handleUnlock(model.id, model.cost)}
              >
                üöÄ Modell Felold√°sa ({model.cost} TK)
              </button>
            )}
          </>
        )}

        {model.unlocked && (
          <div className="unlocked-info">
            <p>‚úÖ <strong>Modell akt√≠v √©s haszn√°latra k√©sz!</strong></p>
            <p>Most m√°r haszn√°lhatod ezt a k√©pess√©get a k√ºldet√©sek sor√°n.</p>
          </div>
        )}
      </div>
    </motion.div>
  );

  return (
    <motion.div 
      className="model-unlock"
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.6 }}
    >
      <div className="page-header">
        <h2>üß† G√©pi Tanul√°si Modellek</h2>
        <p>Fejleszd ki az MI-rendszered k√©pess√©geit √∫j modellek felold√°s√°val!</p>
      </div>

      <div className="unlock-progress">
        <h3>üìä Fejleszt√©si Folyamat</h3>
        <div className="progress-bar">
          <div 
            className="progress-fill"
            style={{ width: `\${(gameState.unlockedModels.length / 2) * 100}%` }}
          ></div>
        </div>
        <p>{gameState.unlockedModels.length}/2 modell feloldva</p>
      </div>

      <div className="credits-display">
        <div className="credit-info">
          <span className="credit-icon">ü™ô</span>
          <span>El√©rhet≈ë kreditek: <strong>{gameState.credits} TK</strong></span>
        </div>
      </div>

      <div className="models-grid">
        {models.map(model => (
          <ModelCard key={model.id} model={model} />
        ))}
      </div>

      <div className="development-info">
        <h3>üéì Fejleszt√©si √ötmutat√≥</h3>
        <div className="info-cards">
          <div className="info-card">
            <h4>1Ô∏è‚É£ Els≈ë l√©p√©s: Klasszifik√°ci√≥</h4>
            <p>
              Kezdd a klasszifik√°ci√≥s modellel! Ez tan√≠tja meg az MI-nek, 
              hogy k√ºl√∂nbs√©get tegyen a j√≥ √©s rossz term√©kek k√∂z√∂tt.
            </p>
          </div>
          <div className="info-card">
            <h4>2Ô∏è‚É£ M√°sodik l√©p√©s: Regresszi√≥</h4>
            <p>
              A regresszi√≥s modell numerikus el≈ërejelz√©seket k√©sz√≠t. 
              Seg√≠t megj√≥solni a termel√©si mennyis√©geket √©s optimaliz√°lni a folyamatokat.
            </p>
          </div>
          <div className="info-card">
            <h4>3Ô∏è‚É£ Kombin√°lt er≈ë</h4>
            <p>
              Mindk√©t modell egy√ºtt alkot egy hat√©kony rendszert, amely 
              a gy√°r teljes m≈±k√∂d√©s√©t optimaliz√°lja!
            </p>
          </div>
        </div>
      </div>
    </motion.div>
  );
};

export default ModelUnlock;
